"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkapp_vue"] = self["webpackChunkapp_vue"] || []).push([["node_modules_capacitor-community_keep-awake_dist_esm_web_js"],{

/***/ "./node_modules/@capacitor-community/keep-awake/dist/esm/web.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@capacitor-community/keep-awake/dist/esm/web.js ***!
  \**********************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   KeepAwakeWeb: function() { return /* binding */ KeepAwakeWeb; }\n/* harmony export */ });\n/* harmony import */ var _capacitor_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @capacitor/core */ \"./node_modules/@capacitor/core/dist/index.js\");\n\nclass KeepAwakeWeb extends _capacitor_core__WEBPACK_IMPORTED_MODULE_0__.WebPlugin {\n    constructor() {\n        super(...arguments);\n        this.wakeLock = null;\n        this._isSupported = 'wakeLock' in navigator;\n    }\n    async keepAwake() {\n        if (!this._isSupported) {\n            this.throwUnsupportedError();\n        }\n        if (this.wakeLock) {\n            await this.allowSleep();\n        }\n        this.wakeLock = await navigator.wakeLock.request('screen');\n    }\n    async allowSleep() {\n        var _a;\n        if (!this._isSupported) {\n            this.throwUnsupportedError();\n        }\n        (_a = this.wakeLock) === null || _a === void 0 ? void 0 : _a.release();\n        this.wakeLock = null;\n    }\n    async isSupported() {\n        const result = {\n            isSupported: this._isSupported,\n        };\n        return result;\n    }\n    async isKeptAwake() {\n        if (!this._isSupported) {\n            this.throwUnsupportedError();\n        }\n        const result = {\n            isKeptAwake: !!this.wakeLock,\n        };\n        return result;\n    }\n    throwUnsupportedError() {\n        throw this.unavailable('Screen Wake Lock API not available in this browser.');\n    }\n}\n//# sourceMappingURL=web.js.map\n\n//# sourceURL=webpack://app-vue/./node_modules/@capacitor-community/keep-awake/dist/esm/web.js?");

/***/ })

}]);